C++ interview quesions:
1. Define Class?
Answer:
The class generally specifies the structure of data. It can be defined as the blueprint that describes the states of supported types. For e.g. the details of the student in student class like student’s age, name, address, etc. in one block that is class.

2. Define Object?
Answer:
This is the basic C++ interview questions that are asked in an interview. An object is the instance of a class and it can have states and behaviour. Once an object has been created in class, you can easily access the defined members of that class with the help of an object.
3. Explain the features or concepts of Object-oriented programming (OOP)?
Answer:
The features or concepts of OOP are as below:

Abstraction
Encapsulation
Inheritance
Polymorphism
Abstraction: It is used for hiding the internal implementations and displays only the required details to the user. Abstraction can be implemented with the help of abstract class or interface. For e.g. Calculator. In the calculator, it shows only output whatever input is given. How the calculations are done, that is not necessary detail for the user.

Encapsulation: It is referred to as data hiding. It is a mechanism that binds the data and operations together and hides that details from the user. Encapsulation can be achieved with the help of access specifiers that are public, private and protected in C++. With the help of them, we can provide access or prevent the access directly to a user.

Inheritance: It is referred to as a process of creating new classes from existing classes. It means to inherit the properties of the parent class by the child class. The parent class is also called as Base class and child class is also referred to as a Derived class. Inheritance is used mainly for code reusability and to extend the parent classes.

Polymorphism: It refers to many forms. It mainly describes as when a member function is called, it will execute the different function depending on the type of object that to invoke the function.

4. What are the access specifiers in C++?
Answer:
In an object-oriented language, access specifiers are referred to as the keywords that are used to set the accessibility of classes, function, methods and other members. There are only 3 access specifiers for C++ that are: 1. Public 2. Private 3. Protected

Public: The members or fields that are declared as public can be accessed outside the class as well.
Private: The members or fields that are declared as private cannot be accessed outside the class. They can be accessed only inside the class.
Protected: The members or fields that are declared as protected can be accessed outside the class but only in a class derived from that class.
Let us move to the next C++ interview questions.

6. What is inheritance and explain its types?
Answer:
Inheritance explained earlier, please check question no. 2. There are different types of Inheritance that are:

Single Inheritance: It refers to the inheritance when there is only one parent class and child class.
Multiple Inheritance: It refers to inheritance when a derived class inherits the properties of two or more classes.
Multilevel Inheritance: It refers to inheritance when the derived class is base class for another class.
Hierarchical Inheritance: It refers to inheritance when multiple derived classes inherit the properties of the same base class.
Hybrid Inheritance: It refers to Virtual Inheritance. It is a combination of Multilevel and Hierarchical inheritance.
7. What are the data types and variables in C++?
Answer:
Data types are used to define the type of variable and accordingly, OS allocates the memory space and what can be stored. Variables are declared for which the value will be assigned and while declaring it reserves the memory space to hold the values. For e.g. int X, in this example, ‘int’ is data type and ‘X’ is variable. Some data type examples are int, char, float, long, bool, double, void.

Let us move to the next C++ interview questions

8. What is Constructor and destructor in C++?
Answer:
The constructor has been executed when the new objects of the class are created. It will have the same name exactly as the class name. A constructor can be the default constructor, which is not required to mention and it does not have any parameter. A constructor can be parametrized constructor that we need to mention or declare in class and parameters needs to be initialized.
Destructor has been executed when the objects of a class are not in scope or it’s no longer in use. It will have the same name exactly as the class name but should be prefixed with (~) sign. It is mainly used for releasing resources like a closing of files, etc.


These are the most important topics from DSA for interviews which can be coded in c++.
Topic:	Problem: 
	
Array	Reverse the array
Array	Find the maximum and minimum element in an array
Array	Find the "Kth" max and min element of an array 
Array	Given an array which consists of only 0, 1 and 2. Sort the array without using any sorting algo
Array	Move all the negative elements to one side of the array 
Array	Find the Union and Intersection of the two sorted arrays.
Array	Write a program to cyclically rotate an array by one.
Array	find Largest sum contiguous Subarray [V. IMP]
Array	Minimise the maximum difference between heights [V.IMP]
Array	Minimum no. of Jumps to reach end of an array
Array	find duplicate in an array of N+1 Integers
Array	Merge 2 sorted arrays without using Extra space.
Array	Kadane's Algo [V.V.V.V.V IMP]
Array	Merge Intervals
Array	Next Permutation
Array	Count Inversion
Array	Best time to buy and Sell stock
Array	find all pairs on integer array whose sum is equal to given number
Array	find common elements In 3 sorted arrays
Array	Rearrange the array in alternating positive and negative items with O(1) extra space
Array	Find if there is any subarray with sum equal to 0
Array	Find factorial of a large number
Array	find maximum product subarray 
Array	Find longest coinsecutive subsequence
Array	Given an array of size n and a number k, fin all elements that appear more than " n/k " times.
Array	Maximum profit by buying and selling a share atmost twice
Array	Find whether an array is a subset of another array
Array	Find the triplet that sum to a given value
Array	Trapping Rain water problem
Array	Chocolate Distribution problem
Array	Smallest Subarray with sum greater than a given value
Array	Three way partitioning of an array around a given value
Array	Minimum swaps required bring elements less equal K together
Array	Minimum no. of operations required to make an array palindrome
Array	Median of 2 sorted arrays of equal size
Array	Median of 2 sorted arrays of different size
	
Matrix	Spiral traversal on a Matrix
Matrix	Search an element in a matriix
Matrix	Find median in a row wise sorted matrix
Matrix	Find row with maximum no. of 1's
Matrix	Print elements in sorted order using row-column wise sorted matrix
Matrix	Maximum size rectangle
Matrix	Find a specific pair in matrix
Matrix	Rotate matrix by 90 degrees
Matrix	Kth smallest element in a row-cpumn wise sorted matrix
Matrix	Common elements in all rows of a given matrix
	
		
String	Reverse a String
String	Check whether a String is Palindrome or not
String	Find Duplicate characters in a string
String	Why strings are immutable in Java?
String	Write a Code to check whether one string is a rotation of another
String	Write a Program to check whether a string is a valid shuffle of two strings or not
String	Count and Say problem
String	Write a program to find the longest Palindrome in a string.[ Longest palindromic Substring]
String	Find Longest Recurring Subsequence in String
String	Print all Subsequences of a string.
String	Print all the permutations of the given string
String	Split the Binary string into two substring with equal 0’s and 1’s
String	Word Wrap Problem [VERY IMP].
String	EDIT Distance [Very Imp]
String	Find next greater number with same set of digits. [Very Very IMP]
String	Balanced Parenthesis problem.[Imp]
String	Word break Problem[ Very Imp]
String	Rabin Karp Algo
String	KMP Algo
String	Convert a Sentence into its equivalent mobile numeric keypad sequence.
String	Minimum number of bracket reversals needed to make an expression balanced.
String	Count All Palindromic Subsequence in a given String.
String	Count of number of given string in 2D character array
String	Search a Word in a 2D Grid of characters.
String	Boyer Moore Algorithm for Pattern Searching.
String	Converting Roman Numerals to Decimal
String	Longest Common Prefix
String	Number of flips to make binary string alternate
String	Find the first repeated word in string.
String	Minimum number of swaps for bracket balancing.
String	Find the longest common subsequence between two strings.
String	Program to generate all possible valid IP addresses from given  string.
String	Write a program tofind the smallest window that contains all characters of string itself.
String	Rearrange characters in a string such that no two adjacent are same
String	Minimum characters to be added at front to make string palindrome
String	Given a sequence of words, print all anagrams together
String	Find the smallest window in a string containing all characters of another string
String	Recursively remove all adjacent duplicates
String	String matching where one string contains wildcard characters
String	Function to find Number of customers who could not get a computer
String	Transform One String to Another using Minimum Number of Given Operation
String	Check if two given strings are isomorphic to each other
String	Recursively print all sentences that can be formed from list of word lists
	
    Searching & Sorting	Find first and last positions of an element in a sorted array
Searching & Sorting	Find a Fixed Point (Value equal to index) in a given array
Searching & Sorting	Search in a rotated sorted array
Searching & Sorting	square root of an integer
Searching & Sorting	Maximum and minimum of an array using minimum number of comparisons
Searching & Sorting	Optimum location of point to minimize total distance
Searching & Sorting	Find the repeating and the missing
Searching & Sorting	find majority element
Searching & Sorting	Searching in an array where adjacent differ by at most k
Searching & Sorting	find a pair with a given difference
Searching & Sorting	find four elements that sum to a given value
Searching & Sorting	maximum sum such that no 2 elements are adjacent
Searching & Sorting	Count triplet with sum smaller than a given value
Searching & Sorting	merge 2 sorted arrays
Searching & Sorting	print all subarrays with 0 sum
Searching & Sorting	Product array Puzzle
Searching & Sorting	Sort array according to count of set bits
Searching & Sorting	minimum no. of swaps required to sort the array
Searching & Sorting	Bishu and Soldiers
Searching & Sorting	Rasta and Kheshtak
Searching & Sorting	Kth smallest number again
Searching & Sorting	Find pivot element in a sorted array
Searching & Sorting	K-th Element of Two Sorted Arrays
Searching & Sorting	Aggressive cows
Searching & Sorting	Book Allocation Problem
Searching & Sorting	EKOSPOJ:
Searching & Sorting	Job Scheduling Algo
Searching & Sorting	Missing Number in AP
Searching & Sorting	Smallest number with atleastn trailing zeroes infactorial
Searching & Sorting	Painters Partition Problem:
Searching & Sorting	ROTI-Prata SPOJ
Searching & Sorting	DoubleHelix SPOJ
Searching & Sorting	Subset Sums
Searching & Sorting	Findthe inversion count
Searching & Sorting	Implement Merge-sort in-place
Searching & Sorting	Partitioning and Sorting Arrays with Many Repeated Entries
	
		
LinkedList	Write a Program to reverse the Linked List. (Both Iterative and recursive)
LinkedList	Reverse a Linked List in group of Given Size. [Very Imp]
LinkedList	Write a program to Detect loop in a linked list.
LinkedList	Write a program to Delete loop in a linked list.
LinkedList	Find the starting point of the loop. 
LinkedList	Remove Duplicates in a sorted Linked List.
LinkedList	Remove Duplicates in a Un-sorted Linked List.
LinkedList	Write a Program to Move the last element to Front in a Linked List.
LinkedList	Add “1” to a number represented as a Linked List.
LinkedList	Add two numbers represented by linked lists.
LinkedList	Intersection of two Sorted Linked List.
LinkedList	Intersection Point of two Linked Lists.
LinkedList	Merge Sort For Linked lists.[Very Important]
LinkedList	Quicksort for Linked Lists.[Very Important]
LinkedList	Find the middle Element of a linked list.
LinkedList	Check if a linked list is a circular linked list.
LinkedList	Split a Circular linked list into two halves.
LinkedList	Write a Program to check whether the Singly Linked list is a palindrome or not.
LinkedList	Deletion from a Circular Linked List.
LinkedList	Reverse a Doubly Linked list.
LinkedList	Find pairs with a given sum in a DLL.
LinkedList	Count triplets in a sorted DLL whose sum is equal to given value “X”.
LinkedList	Sort a “k”sorted Doubly Linked list.[Very IMP]
LinkedList	Rotate DoublyLinked list by N nodes.
LinkedList	Rotate a Doubly Linked list in group of Given Size.[Very IMP]
LinkedList	Can we reverse a linked list in less than O(n) ?
LinkedList	Why Quicksort is preferred for. Arrays and Merge Sort for LinkedLists ?
LinkedList	Flatten a Linked List
LinkedList	Sort a LL of 0's, 1's and 2's
LinkedList	Clone a linked list with next and random pointer
LinkedList	Merge K sorted Linked list
LinkedList	Multiply 2 no. represented by LL
LinkedList	Delete nodes which have a greater value on right side
LinkedList	Segregate even and odd nodes in a Linked List
LinkedList	Program for n’th node from the end of a Linked List
LinkedList	Find the first non-repeating character from a stream of characters
	